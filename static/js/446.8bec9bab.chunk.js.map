{"version":3,"file":"static/js/446.8bec9bab.chunk.js","mappings":"uNAGMA,EAAcC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gFAOjBC,GAAYJ,EAAAA,EAAAA,IAAOD,EAAPC,CAAmBK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oZAqB/BG,EAAcN,EAAAA,GAAOC,IAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oiBA6BxBK,EAAgBR,EAAAA,GAAOC,IAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8nB,4BChDvC,EATkB,WAChB,IACwBO,GACpBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,CAAK,IAD9BC,mBAAsBH,SAIxB,OADAI,QAAQC,IAAI,gBAAiBL,IACtBM,EAAAA,EAAAA,KAAA,OAAAC,SAAK,aACd,ECoEA,EApEuB,WAErB,IAAMC,GAAUC,EAAAA,EAAAA,QAAO,IACjBC,GAAWD,EAAAA,EAAAA,QAAO,IAGlBE,GAAWC,EAAAA,EAAAA,MAIOZ,GACpBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,CAAK,IAD9BC,mBAAsBH,SAIxBI,QAAQC,IAAI,gBAAiBL,GAW7B,OACEa,EAAAA,EAAAA,MAACnB,EAAS,CAAAa,SAAA,EACRM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYP,SAAA,EACzBD,EAAAA,EAAAA,KAAA,UAAQQ,UAAU,eAAcP,UAC9BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uBAENM,EAAAA,EAAAA,MAACjB,EAAW,CAAAW,SAAA,EACVD,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,mBAAkBP,UAChCM,EAAAA,EAAAA,MAAA,YAAUC,UAAU,mBAAkBP,SAAA,EACpCD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,iBACRD,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,OAAMR,SAAC,qBACtBD,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLC,KAAK,OACLC,YAAY,aACZJ,UAAU,cACVK,GAAG,OACHC,SAAU,SAACC,GAAC,OAAMb,EAAQc,QAAUD,EAAEE,OAAOC,KAAK,KAEpDlB,EAAAA,EAAAA,KAAA,SAAOS,QAAQ,QAAOR,SAAC,sBACvBD,EAAAA,EAAAA,KAAA,SACEU,KAAK,QACLS,UAAU,QACVR,KAAK,QACLC,YAAY,cACZJ,UAAU,cACVK,GAAG,QACHC,SAAU,SAACC,GAAC,OAAMX,EAASY,QAAUD,EAAEE,OAAOC,KAAK,UAKzDX,EAAAA,EAAAA,MAACf,EAAa,CAAAS,SAAA,EACZD,EAAAA,EAAAA,KAAA,UAAQoB,QAAS,kBAzCN,WACnB,IAAMC,EAAO,CACXV,KAAMT,EAAQc,QACdM,MAAOlB,EAASY,SAElBX,GAASkB,EAAAA,EAAAA,IAAYF,GACvB,CAmCiCG,EAAc,EAACvB,SAAC,YACvCD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,sBAIdD,EAAAA,EAAAA,KAACyB,EAAS,MAGhB,ECjEA,EARmB,WACjB,OACEzB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC0B,EAAc,KAGrB,C","sources":["Components/SampleView/Styles/SampleViewStyles.js","Components/SampleView/ChildView.jsx","Components/SampleView/SampleView.jsx","View/SampleView/SampleView.js"],"sourcesContent":["import { styled } from \"styled-components\";\r\n\r\n// reusable styles\r\nconst DisplayFlex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n// extending the flex box of DisplayFlex properties to Container styles\r\nexport const Container = styled(DisplayFlex)`\r\n  width: var(--fullWidth);\r\n  min-height: 100vh;\r\n  background-color: var(--secondaryColor);\r\n  .ct_wrapper {\r\n    width: var(--innerWidth);\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .ct_wp_header {\r\n      margin-bottom: 2rem;\r\n      h2 {\r\n        text-transform: uppercase;\r\n        color: var(--bgColor);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  width: 50%;\r\n  min-width: 300px;\r\n  border-radius: 1rem;\r\n  background-color: var(--primaryColor);\r\n  padding: 1rem;\r\n  /* nested selectors */\r\n  form {\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n    .ct_fm_input_wrap {\r\n      display: flex;\r\n      flex-flow: column;\r\n      gap: 10px;\r\n      padding: 0.5rem;\r\n      legend {\r\n        text-transform: capitalize;\r\n      }\r\n      input {\r\n        height: 3em;\r\n        border-radius: 0.5rem;\r\n        border: none;\r\n        outline: none;\r\n        padding: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  width: 50%;\r\n  min-width: 250px;\r\n  padding: 1rem;\r\n  display: flex;\r\n  gap: 10px;\r\n  /* nested element */\r\n  button {\r\n    width: 150px;\r\n    height: 3em;\r\n    border: none;\r\n    color: var(--bgColor);\r\n    text-transform: capitalize;\r\n    transition: background-color 1s ease-in-out;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n    /* using psuedos */\r\n    &:first-of-type {\r\n      background-color: red;\r\n    }\r\n\r\n    &:last-of-type {\r\n      background-color: transparent;\r\n      border: 2px solid;\r\n      /* nested psuedos */\r\n      &:hover {\r\n        background-color: var(--secondaryColor);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChildView = () => {\r\n  const {\r\n    sampleViewReducers: { formData },\r\n  } = useSelector((state) => state);\r\n\r\n  console.log(\"formData :>> \", formData);\r\n  return <div>ChildView</div>;\r\n};\r\n\r\nexport default ChildView;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  ButtonWrapper,\r\n  Container,\r\n  FormWrapper,\r\n} from \"./Styles/SampleViewStyles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFormData } from \"../../Context/Reducer/sampleViewReducers\";\r\nimport ChildView from \"./ChildView\";\r\n\r\nconst SampleViewForm = () => {\r\n  // form fields value holders\r\n  const nameRef = useRef(\"\");\r\n  const emailRef = useRef(\"\");\r\n\r\n  // get dispatch function to manage the state\r\n  const dispatch = useDispatch();\r\n\r\n  // access the state as shown below based on the reducer you created\r\n  const {\r\n    sampleViewReducers: { formData },\r\n  } = useSelector((state) => state);\r\n\r\n  // open the console to see the state taken effect\r\n  console.log(\"formData :>> \", formData);\r\n\r\n  // handle what happens when a user submits a form\r\n  const handleSubmit = () => {\r\n    const data = {\r\n      name: nameRef.current,\r\n      email: emailRef.current,\r\n    };\r\n    dispatch(setFormData(data));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"ct_wrapper\">\r\n        <header className=\"ct_wp_header\">\r\n          <h2>the sample form</h2>\r\n        </header>\r\n        <FormWrapper>\r\n          <form className=\"ct_wp_fm_wp_form\">\r\n            <fieldset className=\"ct_fm_input_wrap\">\r\n              <legend>sample form</legend>\r\n              <label htmlFor=\"name\">Enter your name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                className=\"ct_fm_input\"\r\n                id=\"name\"\r\n                onChange={(e) => (nameRef.current = e.target.value)}\r\n              />\r\n              <label htmlFor=\"email\">Enter your email</label>\r\n              <input\r\n                type=\"email\"\r\n                inputMode=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                className=\"ct_fm_input\"\r\n                id=\"email\"\r\n                onChange={(e) => (emailRef.current = e.target.value)}\r\n              />\r\n            </fieldset>\r\n          </form>\r\n\r\n          <ButtonWrapper>\r\n            <button onClick={() => handleSubmit()}>submit</button>\r\n            <button>look up</button>\r\n          </ButtonWrapper>\r\n        </FormWrapper>\r\n      </div>\r\n      <ChildView />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SampleViewForm;\r\n","import React from \"react\";\r\nimport SampleViewForm from \"../../Components/SampleView/SampleView\";\r\n\r\nconst SampleView = () => {\r\n  return (\r\n    <div>\r\n      <SampleViewForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SampleView;\r\n"],"names":["DisplayFlex","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","FormWrapper","_templateObject3","ButtonWrapper","_templateObject4","formData","useSelector","state","sampleViewReducers","console","log","_jsx","children","nameRef","useRef","emailRef","dispatch","useDispatch","_jsxs","className","htmlFor","type","name","placeholder","id","onChange","e","current","target","value","inputMode","onClick","data","email","setFormData","handleSubmit","ChildView","SampleViewForm"],"sourceRoot":""}